
.row.js-order-filter-buttons.mb-2
  .col-sm
    %input.btn.btn-secondary.btn-block{type: 'button', data: {filter_column: ".js-column-type", filter_value: "Ship"}, value: "Ships"}
  .col-sm
    %input.btn.btn-secondary.btn-block{type: 'button', data: {filter_column: ".js-column-type", filter_value: "Mineral|Planetary"}, value: "Minerals"}
  .col-sm
    %input.btn.btn-secondary.btn-block{type: 'button', data: {filter_column: ".js-column-type", filter_value: "Datacore"}, value: "Datacores"}
  .col-sm
    %input.btn.btn-secondary.btn-block{type: 'button', data: {filter_column: ".js-column-type", filter_value: "Blueprint"}, value: "Blueprints"}

.table-responsive
  %table.table.table-striped.table-dark.table-hover.table-sm.js-order-table
    %thead
      %tr
        %th.js-column-type Type
        %th Item
        %th.js-numeric-sort Price
        %th.js-no-sort Quantity
    %tbody
      = f.fields_for :line_items do |li|
        %tr
          %td= li.object.corp_stock.item_type
          %td= li.label :quantity, li.object.corp_stock.item
          %td
            %div{data: {toggle: "tooltip"}, title: "Data Updated: #{time_ago_in_words(li.object.corp_stock.price_updated_at)} ago"}
              = isk_currency li.object.price, true
          %td
            = li.hidden_field :corp_stock_id
            = li.hidden_field :price
            = li.text_field :quantity, class: "form-control js-item-quantity #{li.object.corp_stock.current_stock <= 0 ? "border-warning border-thick" : ""}", autocomplete: "off", "data-price" => li.object.price, "data-item" => li.object.corp_stock.item, "data-stock" => li.object.corp_stock.current_stock, "data-title" => "Not Enough Stock", "data-html" => true, "data-content" => "Not enough stock to fulfill this quantity.<br>[ALI] will need time to manufacture<br>or gather these items."
